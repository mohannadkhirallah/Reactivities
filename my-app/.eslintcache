[{"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx":"1","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx":"4","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx":"10","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts":"11","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\models\\activity.ts":"12","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\home\\HomePage.tsx":"13","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx":"14","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx":"15","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedHeader.tsx":"16","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedInfo.tsx":"17","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedChat.tsx":"18","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedSideBar.tsx":"19","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx":"20","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx":"21","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx":"22","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx":"23","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\categoryOptionsts.ts":"24"},{"size":1017,"mtime":1612528031235,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1544,"mtime":1612519649864,"results":"28","hashOfConfig":"26"},{"size":806,"mtime":1610716942185,"results":"29","hashOfConfig":"26"},{"size":964,"mtime":1610717459947,"results":"30","hashOfConfig":"26"},{"size":976,"mtime":1610810820299,"results":"31","hashOfConfig":"26"},{"size":1548,"mtime":1611312942158,"results":"32","hashOfConfig":"26"},{"size":4312,"mtime":1613729033839,"results":"33","hashOfConfig":"26"},{"size":2280,"mtime":1612520016794,"results":"34","hashOfConfig":"26"},{"size":334,"mtime":1610100944050,"results":"35","hashOfConfig":"26"},{"size":4751,"mtime":1613727319460,"results":"36","hashOfConfig":"26"},{"size":523,"mtime":1613216374050,"results":"37","hashOfConfig":"26"},{"size":854,"mtime":1611313085924,"results":"38","hashOfConfig":"26"},{"size":313,"mtime":1610716654069,"results":"39","hashOfConfig":"26"},{"size":1560,"mtime":1610811173174,"results":"40","hashOfConfig":"26"},{"size":1941,"mtime":1612520782534,"results":"41","hashOfConfig":"26"},{"size":1745,"mtime":1610813377424,"results":"42","hashOfConfig":"26"},{"size":2454,"mtime":1610813644337,"results":"43","hashOfConfig":"26"},{"size":2281,"mtime":1610813687596,"results":"44","hashOfConfig":"26"},{"size":629,"mtime":1611308813871,"results":"45","hashOfConfig":"26"},{"size":666,"mtime":1612523374988,"results":"46","hashOfConfig":"26"},{"size":687,"mtime":1612524062855,"results":"47","hashOfConfig":"26"},{"size":777,"mtime":1612526412650,"results":"48","hashOfConfig":"26"},{"size":346,"mtime":1612526054038,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"q2xiso",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx",[],["107","108"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["109","110"],"import { group } from 'console';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { Fragment, useContext } from 'react'\r\nimport { Item , Label, Segment} from 'semantic-ui-react';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { ActivityListItem } from './ActivityListItem';\r\n\r\nexport const ActivityList:React.FC = () => {\r\n    const activityStore= useContext(ActivityStore);\r\n    const {activitiesByDate} =activityStore;\r\n    return (\r\n        <Fragment>\r\n          {activitiesByDate.map(([group,activities])=>(\r\n            <Fragment key={group}>\r\n              <Label size='large' color='blue'>{group}</Label>\r\n                <Item.Group divided>\r\n                  {activities.map(activity =>(\r\n                <ActivityListItem activity={activity} ></ActivityListItem>\r\n                ))}\r\n                </Item.Group>\r\n            </Fragment>\r\n          ))}\r\n\r\n      </Fragment>\r\n\r\n\r\n    )\r\n}\r\nexport default observer(ActivityList);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx",["111","112","113"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts",["114","115","116"],"import axios, { AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport {IActivity} from '../models/activity';\r\n\r\n//Setting base  URI\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\n//handle error \r\naxios.interceptors.response.use(undefined, (error)=>{\r\n    if(error.message ==='Network Error' && !error.response){\r\n        toast.error('Make sure the API is running', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n    }\r\n\r\n    const {status,data,config} = error.response;\r\n    if(status === 404)\r\n    {\r\n        history.push('/notfound');\r\n    }\r\n    if(status === 400)\r\n    {\r\n        history.push('/notfound');\r\n    }\r\n    console.log(error.response);\r\n\r\n    if(status === 500)\r\n    {\r\n        toast.error('Server error- Check terminal', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n    }\r\n});\r\n\r\nconst responseBody=(response: AxiosResponse) =>response.data;\r\nconst sleep= (ms:number) =>(response:AxiosResponse) => new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response),ms));\r\n\r\nconst requests = {\r\n\r\n    get: (url:string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url:string,body:{}) => axios.post(url,body).then(sleep(1000)).then(responseBody),\r\n    put : (url:string,body:{}) => axios.put(url,body).then(sleep(1000)).then(responseBody),\r\n    del: (url:string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n\r\n}\r\n\r\nconst Activities ={\r\n\r\n    list:():Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id:string) => requests.get(`/activities/${id}`),\r\n    create: (activity:IActivity) => requests.post('/activities',activity),\r\n    update: (activit:IActivity)  => requests.put(`/activities/${activit.id}`,activit),\r\n    delete: (id:string) => requests.del(`/activities/${id}`)\r\n\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts",["117"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\home\\HomePage.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx",["118"],"import {useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\n const ScrollToTop = ({children, location:{pathname}}:any) => {\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname]);\r\n\r\n    return children;\r\n}\r\nexport default withRouter(ScrollToTop);\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx",["119","120","121","122"],"import React, { useContext } from 'react';\r\nimport { Item , Button, Label, Segment, Icon} from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ActivityListItem:React.FC<{activity:IActivity}> = ({activity}) => {\r\n    const activityStore= useContext(ActivityStore);\r\n    const {deleteActivity,submitting,target} =activityStore;\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                <Item.Group>\r\n                        <Item>\r\n                        <Item.Image size='tiny' circular src='/assets/user.png'/>\r\n                        <Item.Content>\r\n                        <Item.Header as='a'>{activity.title}</Item.Header>\r\n                        <Item.Description> Hosted by Bob </Item.Description>\r\n                        </Item.Content>\r\n                        </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <Icon name='clock'/>{activity.date}\r\n                <Icon name='marker'/>{activity.venue}, {activity.city}\r\n            </Segment>\r\n            <Segment secondary>\r\n                Attenddess will go here\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button as={Link} to ={`/activities/${activity.id}`} floated='right' content='View' color='blue'></Button>\r\n            </Segment>\r\n        </Segment.Group>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedHeader.tsx",["123"],"import { observe } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Item, Header, Button,Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\nexport const ActivityDetailedHeader :React.FC<{activity:IActivity}> = ({activity}) => {\r\n    return (\r\n            <Segment.Group>\r\n              <Segment basic attached='top' style={{ padding: '0' }}>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment basic style={activityImageTextStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <Header\r\n                          size='huge'\r\n                          content={activity.title}\r\n                          style={{ color: 'white' }}\r\n                        />\r\n                        <p>{activity.date}</p>\r\n                        <p>\r\n                          Hosted by <strong>Bob</strong>\r\n                        </p>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Segment>\r\n              <Segment clearing attached='bottom'>\r\n                <Button color='teal'>Join Activity</Button>\r\n                <Button>Cancel attendance</Button>\r\n                <Button as={Link} to={`/manage/${activity.id}`} color='orange' floated='right'>\r\n                  Manage Event\r\n                </Button>\r\n              </Segment>\r\n            </Segment.Group>\r\n    )\r\n}\r\nexport default observer (ActivityDetailedHeader);\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedSideBar.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx",["124","125"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form} from 'semantic-ui-react'\r\n\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\n\r\nexport const TextInput:React.FC<IProps> = ({input,width,type, placeholder, meta:{touched,error} }) => {\r\n\r\n return( \r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n     <input {...input} placeholder={placeholder}>\r\n     </input>\r\n     {touched && error && (\r\n        <Label basic color='red'>{error}</Label>\r\n     )}\r\n    </Form.Field>\r\n )\r\n};\r\n\r\nexport default TextInput;\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx",["126","127"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\n\r\nexport const TextAreaInput: React.FC<IProps> = ({input, type, width, placeholder,rows , meta:{touched,error}}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <textarea rows={rows} {...input} placeholder={placeholder}/>\r\n        {touched && error && (\r\n           <Label basic color='red'>{error}</Label>\r\n        )}\r\n       </Form.Field>\r\n    )\r\n}\r\nexport default TextAreaInput;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx",["128","129"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form, Select} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\nexport const SelectInput:React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    options,\r\n    placeholder,\r\n    meta:{touched,error}\r\n\r\n}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <Select value={input.value}\r\n        onChange={(e,data)=> input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}/>\r\n        {touched && error && (\r\n           <Label basic color='red'>{error}</Label>\r\n        )}\r\n       </Form.Field>\r\n    )\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\categoryOptionsts.ts",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":4,"column":24,"nodeType":"136","messageId":"137","endLine":4,"endColumn":31},{"ruleId":"134","severity":1,"message":"139","line":13,"column":47,"nodeType":"136","messageId":"137","endLine":13,"endColumn":63},{"ruleId":"140","severity":1,"message":"141","line":49,"column":7,"nodeType":"142","endLine":49,"endColumn":68,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":61,"column":11,"nodeType":"136","messageId":"137","endLine":61,"endColumn":28},{"ruleId":"134","severity":1,"message":"145","line":23,"column":19,"nodeType":"136","messageId":"137","endLine":23,"endColumn":23},{"ruleId":"134","severity":1,"message":"146","line":23,"column":24,"nodeType":"136","messageId":"137","endLine":23,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":70,"column":1,"nodeType":"149","endLine":72,"endColumn":2},{"ruleId":"134","severity":1,"message":"150","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":20},{"ruleId":"134","severity":1,"message":"151","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},{"ruleId":"134","severity":1,"message":"152","line":2,"column":25,"nodeType":"136","messageId":"137","endLine":2,"endColumn":30},{"ruleId":"134","severity":1,"message":"153","line":9,"column":12,"nodeType":"136","messageId":"137","endLine":9,"endColumn":26},{"ruleId":"134","severity":1,"message":"154","line":9,"column":27,"nodeType":"136","messageId":"137","endLine":9,"endColumn":37},{"ruleId":"134","severity":1,"message":"155","line":9,"column":38,"nodeType":"136","messageId":"137","endLine":9,"endColumn":44},{"ruleId":"134","severity":1,"message":"156","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":17},{"ruleId":"134","severity":1,"message":"157","line":2,"column":36,"nodeType":"136","messageId":"137","endLine":2,"endColumn":45},{"ruleId":"134","severity":1,"message":"158","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":19},{"ruleId":"134","severity":1,"message":"157","line":2,"column":36,"nodeType":"136","messageId":"137","endLine":2,"endColumn":45},{"ruleId":"134","severity":1,"message":"158","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":19},{"ruleId":"134","severity":1,"message":"157","line":2,"column":36,"nodeType":"136","messageId":"137","endLine":2,"endColumn":45},{"ruleId":"134","severity":1,"message":"158","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":19},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'group' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'hasLengthBetween' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activity.id.length'. Either include it or remove the dependency array.","ArrayExpression",["161"],"'handleInputChange' is assigned a value but never used.","'data' is assigned a value but never used.","'config' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'observable' is defined but never used.","'React' is defined but never used.","'Label' is defined but never used.","'deleteActivity' is assigned a value but never used.","'submitting' is assigned a value but never used.","'target' is assigned a value but never used.","'observe' is defined but never used.","'FinalForm' is defined but never used.","'FormField' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [LoadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]",{"range":"164","text":"165"},[1880,1941],"[LoadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]"]