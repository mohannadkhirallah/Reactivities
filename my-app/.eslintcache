[{"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx":"1","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx":"4","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx":"10"},{"size":566,"mtime":1609510796450,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3309,"mtime":1610103951801,"results":"14","hashOfConfig":"12"},{"size":710,"mtime":1610100420522,"results":"15","hashOfConfig":"12"},{"size":2199,"mtime":1610103987474,"results":"16","hashOfConfig":"12"},{"size":1513,"mtime":1610104132866,"results":"17","hashOfConfig":"12"},{"size":1236,"mtime":1609524613680,"results":"18","hashOfConfig":"12"},{"size":2750,"mtime":1610102240632,"results":"19","hashOfConfig":"12"},{"size":1207,"mtime":1610100017756,"results":"20","hashOfConfig":"12"},{"size":334,"mtime":1610100944050,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"q2xiso",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx",[],["47","48"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",["49","50","51","52"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["53","54","55"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["56"],"import React, { SyntheticEvent } from 'react'\r\nimport { Item ,Image, Button, Label, Segment} from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\n\r\ninterface IProps{\r\n    activities:IActivity[];\r\n    selectActivity:(id:string)=>void;\r\n    deleteActivity :(e:SyntheticEvent<HTMLButtonElement> ,id:string) =>void;\r\n    submitting: boolean;\r\n    target:string;\r\n}\r\nexport const ActivityList:React.FC<IProps> = ({activities,selectActivity,deleteActivity,submitting,target}) => {\r\n    return (\r\n        <Segment clearing>\r\n        <Item.Group divided>\r\n            {activities.map(activity =>(\r\n        <Item key={activity.id}>\r\n        <Item.Content>\r\n          <Item.Header as='a'>{activity.title}</Item.Header>\r\n          <Item.Meta>{activity.date}</Item.Meta>\r\n          <Item.Description>\r\n           <div>{activity.description}</div>\r\n           <div>{activity.city},{activity.venue}</div>\r\n          </Item.Description>\r\n          <Item.Extra>\r\n              <Button onClick={()=> selectActivity(activity.id)} floated='right' content='View' color='blue'></Button>\r\n              <Button name={activity.id} onClick={(e)=>deleteActivity(e,activity.id)} loading={target === activity.id && submitting} floated='right' content='Delete' color='red'></Button>\r\n              <Label basic content={activity.category}></Label>\r\n          </Item.Extra>\r\n        </Item.Content>\r\n      </Item>\r\n            ))}\r\n      </Item.Group>\r\n    </Segment>\r\n\r\n    )\r\n}\r\nexport default ActivityList;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx",["57","58"],"import React from 'react'\r\nimport { act } from 'react-dom/test-utils';\r\nimport { Card,Image,Icon, Button } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\n\r\ninterface Iprops\r\n{\r\n    activity:IActivity;\r\n    setEditMode:(editMode:boolean)=> void;\r\n    setSelectedActivity:(activity:IActivity |null) => void;\r\n}\r\nexport const ActivityDetails:React.FC<Iprops> = ({activity,setEditMode,setSelectedActivity}) => {\r\n    return (\r\n        <Card fluid>\r\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} wrapped ui={false} />\r\n        <Card.Content>\r\n          <Card.Header>{activity.title}</Card.Header>\r\n          <Card.Meta>\r\n            <span>{activity.date}</span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n            {activity.description}\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Button.Group widths={2}>\r\n              <Button onClick={()=>setEditMode(true)} basic color='blue' content=\"Edit\" />\r\n              <Button onClick={()=>setSelectedActivity(null)} basic color='grey' content=\"Cancel\"/>\r\n          </Button.Group>\r\n        </Card.Content>\r\n      </Card>\r\n    )\r\n}\r\nexport default ActivityDetails;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx",["59","60"],"import { on } from 'process';\r\nimport React,{FormEvent, useState} from 'react'\r\nimport { act } from 'react-dom/test-utils';\r\nimport { Button, Form, Segment } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface Iprops{\r\n    setEditMode:(editMode:boolean)=> void;\r\n    activity : IActivity;\r\n    createActivity : (activity:IActivity) =>void;\r\n    editActivity : (activity :IActivity) => void;\r\n    submitting: boolean;\r\n}\r\n\r\nexport const ActivityForm:React.FC<Iprops> = ({setEditMode, activity:initialFormState,createActivity,editActivity ,submitting}) => {\r\n    const initializeForm = ()=>\r\n    {\r\n        if(initialFormState)\r\n        {\r\n            return initialFormState;\r\n        }\r\n        else\r\n        {\r\n            return {\r\n                id:'',\r\n                title:'',\r\n                category:'',\r\n                date:'',\r\n                city:'',\r\n                venue:'',\r\n                description:''\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const [activity,setActivity]=useState<IActivity>(initializeForm);\r\n\r\n    const handleInputChange=(event:FormEvent<HTMLInputElement|HTMLTextAreaElement>)=>{\r\n        const{name,value} =event.currentTarget;\r\n        setActivity({...activity,[name]:value});\r\n    };\r\n\r\n    const handleSubmit =()=>{\r\n        if(activity.id.length ===0)\r\n        {\r\n            let newActivity={\r\n                ...activity,\r\n                id:uuid()\r\n            }\r\n            createActivity(newActivity);\r\n        }\r\n        else{\r\n            editActivity(activity);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Input onChange={handleInputChange} name='title' placeholder='Title' value={activity.title}/>\r\n                <Form.TextArea onChange={handleInputChange} name='description' rows={2} placeholder='Description' value={activity.description} />\r\n                <Form.Input onChange={handleInputChange} name='category' placeholder='Catgeory' value={activity.category}/>\r\n                <Form.Input onChange={handleInputChange} name='date' type='datetime-local' placeholder='Date' value={activity.date} />\r\n                <Form.Input onChange={handleInputChange} name='city' placeholder='City' value={activity.city}/>\r\n                <Form.Input onChange={handleInputChange} name='venue' placeholder='Venue' value={activity.venue}/>\r\n                <Button loading={submitting} floated='right' positive type='submit' content='Submit'/>\r\n                <Button floated='right' type='button' content='Cancel' onClick={()=>setEditMode(false)}/>\r\n            </Form>\r\n        </Segment>\r\n    );\r\n}\r\nexport default ActivityForm;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts",["61","62"],"import axios, { AxiosResponse } from 'axios';\r\nimport { url } from 'inspector';\r\nimport {IActivity} from '../models/activity';\r\n\r\n//Setting base  URI\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody=(response: AxiosResponse) =>response.data;\r\nconst sleep= (ms:number) =>(response:AxiosResponse) => new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response),ms));\r\n\r\nconst requests = {\r\n\r\n    get: (url:string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url:string,body:{}) => axios.post(url,body).then(sleep(1000)).then(responseBody),\r\n    put : (url:string,body:{}) => axios.put(url,body).then(sleep(1000)).then(responseBody),\r\n    del: (url:string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n\r\n}\r\n\r\nconst Activities ={\r\n\r\n    list:():Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id:string) => requests.get(`/activities/${id}`),\r\n    create: (activity:IActivity) => requests.post('/activities',activity),\r\n    update: (activit:IActivity)  => requests.put(`/activities/${activit.id}`,activit),\r\n    delete: (id:string) => requests.del(`/activities/${id}`)\r\n\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":21,"nodeType":"69","messageId":"70","endLine":2,"endColumn":27},{"ruleId":"67","severity":1,"message":"71","line":2,"column":29,"nodeType":"69","messageId":"70","endLine":2,"endColumn":33},{"ruleId":"67","severity":1,"message":"72","line":2,"column":35,"nodeType":"69","messageId":"70","endLine":2,"endColumn":39},{"ruleId":"67","severity":1,"message":"73","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":13},{"ruleId":"67","severity":1,"message":"72","line":2,"column":28,"nodeType":"69","messageId":"70","endLine":2,"endColumn":32},{"ruleId":"74","severity":1,"message":"75","line":52,"column":39,"nodeType":"76","messageId":"77","endLine":52,"endColumn":41},{"ruleId":"74","severity":1,"message":"75","line":52,"column":62,"nodeType":"76","messageId":"77","endLine":52,"endColumn":64},{"ruleId":"67","severity":1,"message":"78","line":2,"column":16,"nodeType":"69","messageId":"70","endLine":2,"endColumn":21},{"ruleId":"67","severity":1,"message":"73","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":3,"column":21,"nodeType":"69","messageId":"70","endLine":3,"endColumn":25},{"ruleId":"67","severity":1,"message":"79","line":1,"column":10,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"73","line":3,"column":10,"nodeType":"69","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"67","severity":1,"message":"80","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":30,"column":1,"nodeType":"83","endLine":32,"endColumn":2},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'List' is defined but never used.","'act' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Image' is defined but never used.","'on' is defined but never used.","'url' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]