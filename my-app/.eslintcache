[{"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx":"1","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx":"4","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx":"10","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts":"11","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\models\\activity.ts":"12","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\home\\HomePage.tsx":"13","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx":"14","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx":"15","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedHeader.tsx":"16","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedInfo.tsx":"17","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedChat.tsx":"18","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedSideBar.tsx":"19","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx":"20","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx":"21","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx":"22","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx":"23","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\categoryOptionsts.ts":"24","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\rootStore.ts":"25","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\userStore.ts":"26","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\LoginForm.tsx":"27","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\commonStore.ts":"28","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\modalStore.ts":"29","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\modals\\ModalContainer.tsx":"30","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessage.tsx":"31","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessageViewer.tsx":"32","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\RegisterForm.tsx":"33"},{"size":1017,"mtime":1612528031235,"results":"34","hashOfConfig":"35"},{"size":425,"mtime":499162500000,"results":"36","hashOfConfig":"35"},{"size":2254,"mtime":1614361151066,"results":"37","hashOfConfig":"35"},{"size":1656,"mtime":1614357617045,"results":"38","hashOfConfig":"35"},{"size":1151,"mtime":1614346984706,"results":"39","hashOfConfig":"35"},{"size":1150,"mtime":1614346809910,"results":"40","hashOfConfig":"35"},{"size":1722,"mtime":1614346942113,"results":"41","hashOfConfig":"35"},{"size":4486,"mtime":1614346973134,"results":"42","hashOfConfig":"35"},{"size":2917,"mtime":1614359419902,"results":"43","hashOfConfig":"35"},{"size":334,"mtime":1610100944050,"results":"44","hashOfConfig":"35"},{"size":4882,"mtime":1614348481055,"results":"45","hashOfConfig":"35"},{"size":523,"mtime":1613216374050,"results":"46","hashOfConfig":"35"},{"size":1759,"mtime":1614404470994,"results":"47","hashOfConfig":"35"},{"size":313,"mtime":1610716654069,"results":"48","hashOfConfig":"35"},{"size":1734,"mtime":1614346846913,"results":"49","hashOfConfig":"35"},{"size":1941,"mtime":1612520782534,"results":"50","hashOfConfig":"35"},{"size":1745,"mtime":1610813377424,"results":"51","hashOfConfig":"35"},{"size":2454,"mtime":1610813644337,"results":"52","hashOfConfig":"35"},{"size":2281,"mtime":1610813687596,"results":"53","hashOfConfig":"35"},{"size":629,"mtime":1611308813871,"results":"54","hashOfConfig":"35"},{"size":666,"mtime":1612523374988,"results":"55","hashOfConfig":"35"},{"size":687,"mtime":1612524062855,"results":"56","hashOfConfig":"35"},{"size":777,"mtime":1612526412650,"results":"57","hashOfConfig":"35"},{"size":346,"mtime":1612526054038,"results":"58","hashOfConfig":"35"},{"size":722,"mtime":1614361010339,"results":"59","hashOfConfig":"35"},{"size":1849,"mtime":1614404222986,"results":"60","hashOfConfig":"35"},{"size":1886,"mtime":1614403959428,"results":"61","hashOfConfig":"35"},{"size":821,"mtime":1614360150686,"results":"62","hashOfConfig":"35"},{"size":591,"mtime":1614403420256,"results":"63","hashOfConfig":"35"},{"size":565,"mtime":1614403341623,"results":"64","hashOfConfig":"35"},{"size":454,"mtime":1614363542997,"results":"65","hashOfConfig":"35"},{"size":777,"mtime":1614405445809,"results":"66","hashOfConfig":"35"},{"size":2125,"mtime":1614405074789,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"q2xiso",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx",[],["152","153"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",["154","155","156"],"import React ,{Fragment, useContext, useEffect} from  'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from '../../feature/nav/NavBar';\nimport ActivityDashboard from '../../feature/activities/dashboard/ActivityDashboard';\nimport {observer} from 'mobx-react-lite';\nimport { Route,RouteComponentProps,Switch,withRouter } from 'react-router-dom';\nimport { HomePage } from '../../feature/home/HomePage';\nimport { ActivityForm } from '../../feature/activities/form/ActivityForm';\nimport { ActivityDetails } from '../../feature/activities/details/ActivityDetails';\nimport NotFound from './NotFound';\nimport { ToastContainer } from 'react-toastify';\nimport LoginForm from '../../feature/user/LoginForm';\nimport { RootStoreContext } from '../stores/rootStore';\nimport { getuid } from 'process';\nimport { LoadingCompnent } from './LoadingCompnent';\nimport ModalContainer from '../common/modals/ModalContainer';\n\nconst App:React.FC<RouteComponentProps> = ({location}) => {\n\n  const rootStore=useContext(RootStoreContext);\n  const {setAppLoaded,token,appLoaded} =rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(()=>{\n    if(token)\n    {\n      getUser().finally(()=>setAppLoaded())\n    }\n    else\n    {\n      setAppLoaded()\n    }\n  },[getUser,setAppLoaded,token])\n\n \n\n    return (\n      <Fragment>\n        <ModalContainer></ModalContainer>\n        <ToastContainer position='top-right'/> \n        <Route exact path='/' component={HomePage} />\n        <Route path={'/(.+)'} render={() => (\n                <Fragment>\n                 <NavBar />\n                 <Container style={{marginTop:'7em'}}>\n                   <Switch>\n                    <Route exact path='/activities' component={ActivityDashboard}/>\n                    <Route  path='/activities/:id' component={ActivityDetails}/>\n                    <Route key={location.key} path= {['/createActivity','/manage/:id']} component={ActivityForm}/>\n                    <Route path='/login' component={LoginForm}/>\n                    <Route component={NotFound}/>\n                   </Switch>\n                 </Container>\n                 \n                 </Fragment>\n        )}></Route>\n      </Fragment>\n    );\n}\nexport default withRouter(observer(App));\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx",["157","158"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport {  Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, DropdownMenu, Image, Menu } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\n\r\nexport const NavBar:React.FC = () => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const {isLoggedIn,user,logout} = rootStore.userStore;\r\n    return (\r\n        <Menu fixed='top' inverted>\r\n            <Container>\r\n            <Menu.Item header as ={NavLink} exact to='/' >\r\n                <img src=\"/assets/logo.png\" alt=\"logo\"style={{marginRight:10}} ></img> Reactivities\r\n            </Menu.Item>\r\n            <Menu.Item  name='Activities' as={NavLink} to ='/activities'/>\r\n            <Menu.Item >\r\n                <Button as={NavLink} to='/createActivity' positive content='Create Activity'></Button>\r\n            </Menu.Item>\r\n            {user && (\r\n                    <Menu.Item position='right'>\r\n                      <Image avatar spaced='right' src={user.imgae ||'/assets/user.png'} />\r\n                      <Dropdown pointing='top left' text={user.displayName}>\r\n                        <Dropdown.Menu>\r\n                          <Dropdown.Item as={Link} to={`/profile/username`} text='My profile' icon='user'/>\r\n                           <Dropdown.Item  onClick={logout} text='Logout' icon='power' /> \r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </Menu.Item>)}\r\n                    </Container>\r\n                    </Menu>\r\n\r\n    )\r\n};\r\nexport default observer( NavBar);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["159","160"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Grid, GridColumn } from 'semantic-ui-react';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { LoadingCompnent } from '../../../app/layout/LoadingCompnent';\r\nimport { RootStore, RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nexport const ActivityDashboard :React.FC = () => {\r\n    // const activityStore = useContext(ActivityStore);\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n\r\n \r\n    useEffect(() => {\r\n       activityStore.loadActivities();\r\n       },[activityStore]);\r\n     \r\n     if(activityStore.loadingInitial) return <LoadingCompnent content='Loading activites...'></LoadingCompnent>;\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10} >\r\n                <ActivityList />\r\n            </Grid.Column>\r\n            <GridColumn width={6}>\r\n               <h2>Activity filters</h2>\r\n            </GridColumn>\r\n        </Grid>\r\n    )\r\n}\r\nexport default observer(ActivityDashboard) ;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["161","162","163"],"import { group } from 'console';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { Fragment, useContext } from 'react'\r\nimport { Item , Label, Segment} from 'semantic-ui-react';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { ActivityListItem } from './ActivityListItem';\r\n\r\nexport const ActivityList:React.FC = () => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {activitiesByDate} =activityStore;\r\n    return (\r\n        <Fragment>\r\n          {activitiesByDate.map(([group,activities])=>(\r\n            <Fragment key={group}>\r\n              <Label size='large' color='blue'>{group}</Label>\r\n                <Item.Group divided>\r\n                  {activities.map(activity =>(\r\n                <ActivityListItem activity={activity} ></ActivityListItem>\r\n                ))}\r\n                </Item.Group>\r\n            </Fragment>\r\n          ))}\r\n\r\n      </Fragment>\r\n\r\n\r\n    )\r\n}\r\nexport default observer(ActivityList);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx",["164"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext,useEffect } from 'react'\r\nimport {  RouteComponentProps } from 'react-router-dom';\r\nimport {  Grid } from 'semantic-ui-react';\r\nimport { LoadingCompnent } from '../../../app/layout/LoadingCompnent';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { ActivityDetailedChat } from './ActivityDetailedChat';\r\nimport { ActivityDetailedHeader } from './ActivityDetailedHeader';\r\nimport { ActivityDetailedInfo } from './ActivityDetailedInfo';\r\nimport { ActivityDetailedSideBar } from './ActivityDetailedSideBar';\r\n\r\ninterface DetailsParams\r\n{\r\n  id:string\r\n}\r\nexport const ActivityDetails:React.FC<RouteComponentProps<DetailsParams>> = ({match,history}) => {\r\n\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {selectedActivity:activity,LoadActivity,loadingInitial} = activityStore;\r\n\r\n    useEffect(() => {\r\n    LoadActivity(match.params.id)\r\n    },[LoadActivity,match.params.id]);\r\n\r\n    if(loadingInitial || !activity) return (<LoadingCompnent content='Loading activity...'></LoadingCompnent>)\r\n    if(!activity) return <h2>activity not found</h2>\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailedHeader activity={activity}/>\r\n          <ActivityDetailedInfo activity={activity}/>\r\n          <ActivityDetailedChat/>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n}\r\nexport default observer(ActivityDetails) ;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx",["165","166","167","168"],"import React,{FormEvent, useContext, useEffect, useState} from 'react'\r\nimport { Button, Form, Grid, GridColumn, Segment } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Form as FinalForm, Field} from 'react-final-form';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport { SelectInput } from '../../../app/common/form/SelectInput';\r\nimport { category } from '../../../app/common/form/categoryOptionsts';\r\nimport {combineValidators, composeValidators, hasLengthBetween, hasLengthGreaterThan, isRequired} from 'revalidate';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n\r\nconst validate=combineValidators({\r\n\r\n    title:isRequired({message:'Event title is requied'}),\r\n    category: isRequired('Category'),\r\n    description: composeValidators(isRequired('description'),\r\n    hasLengthGreaterThan(4)({message:'Description needs to be at least 5 charachters'}))(),\r\n    city:isRequired('City'),\r\n    date:isRequired('Date'),\r\n    venue:isRequired('Venue')\r\n\r\n\r\n})\r\n\r\n\r\ninterface DetailsParams\r\n{\r\n    id:string\r\n}\r\n\r\nexport const ActivityForm:React.FC<RouteComponentProps<DetailsParams>> = ({history,match}) => {\r\n\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {createActivity,editActivity,submitting,selectedActivity:initialFormState,LoadActivity,clearActivity}= activityStore;\r\n\r\n    useEffect(()=>{\r\n        if(match.params.id && activity.id.length ===0)\r\n        {\r\n            LoadActivity(match.params.id).then(\r\n                ()=> initialFormState && setActivity(initialFormState));\r\n        }\r\n        return () =>{\r\n            clearActivity();\r\n        }\r\n    },[LoadActivity,clearActivity,match.params.id,initialFormState]);\r\n    // OLD code \r\n    const [activity,setActivity]=useState<IActivity>({\r\n        id:'',\r\n        title:'',\r\n        category:'',\r\n        date:'',\r\n        city:'',\r\n        venue:'',\r\n        description:'' \r\n    });\r\n\r\n    const handleInputChange=(event:FormEvent<HTMLInputElement|HTMLTextAreaElement>)=>{\r\n        const{name,value} =event.currentTarget;\r\n        setActivity({...activity,[name]:value});\r\n    };\r\n\r\n\r\n    const handleFinalFormSubmit = (values:any)=>{\r\n        if(activity.id.length ===0)\r\n        {\r\n            let newActivity={\r\n                ...activity,\r\n                id:uuid()\r\n            }\r\n            createActivity(newActivity).then(()=>history.push(`/activities/${newActivity.id}`));\r\n        }\r\n        else{\r\n            editActivity(activity).then(()=>history.push(`/activities/${activity.id}`));\r\n        }\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <GridColumn width={10}>\r\n            <Segment clearing>\r\n                <FinalForm\r\n                validate={validate}\r\n                onSubmit={handleFinalFormSubmit}\r\n                initialValues={activity}\r\n                render={({handleSubmit, invalid,pristine})=> (\r\n                <Form onSubmit={handleSubmit}>\r\n                <Field component={TextInput}  name='title' placeholder='Title' value={activity.title} />\r\n                <Field component={TextAreaInput} rows={3} name='description' placeholder='Description' value={activity.description} />\r\n                <Field component={SelectInput} options={category} name='category' placeholder='Catgeory' value={activity.category}/>\r\n                <Field component={TextInput} type='Date' name='date'  placeholder='Date' value={activity.date} />\r\n                <Field component={TextInput} name='city' placeholder='City' value={activity.city}/>\r\n                <Field component={TextInput} name='venue' placeholder='Venue' value={activity.venue}/>\r\n                <Button loading={submitting} floated='right' positive type='submit' content='Submit' disabled={invalid || pristine}/>\r\n                <Button floated='right' type='button' content='Cancel' onClick={()=> history.push('/activities')}/>\r\n            </Form>\r\n                )}/>\r\n        </Segment>\r\n            </GridColumn>\r\n        </Grid>\r\n      \r\n    );\r\n}\r\nexport default observer(ActivityForm);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts",["169","170","171","172"],"import axios, { AxiosResponse } from 'axios';\r\nimport { promises } from 'dns';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport {IActivity} from '../models/activity';\r\nimport { IUser, IUserFormValues } from '../models/user';\r\n\r\n//Setting base  URI\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\naxios.interceptors.request.use((config)=>{\r\n\r\n    const token = window.localStorage.getItem('jwt');\r\n    if(token)\r\n        config.headers.Authorization =`Bearer ${token}` \r\n    return config;\r\n}, error=> {\r\n    return Promise.reject(error);\r\n})\r\n\r\n//handle error \r\naxios.interceptors.response.use(undefined, (error)=>{\r\n    if(error.message ==='Network Error' && !error.response){\r\n        toast.error('Make sure the API is running', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n    }\r\n\r\n    const {status,data,config} = error.response;\r\n    if(status === 404)\r\n    {\r\n        history.push('/notfound');\r\n    }\r\n    if(status === 400)\r\n    {\r\n        history.push('/notfound');\r\n    }\r\n    console.log(error.response);\r\n\r\n    if(status === 500)\r\n    {\r\n        toast.error('Server error- Check terminal', {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n    }\r\n    throw error.response;\r\n});\r\n\r\nconst responseBody=(response: AxiosResponse) =>response.data;\r\nconst sleep= (ms:number) =>(response:AxiosResponse) => new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response),ms));\r\n\r\nconst requests = {\r\n\r\n    get: (url:string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url:string,body:{}) => axios.post(url,body).then(sleep(1000)).then(responseBody),\r\n    put : (url:string,body:{}) => axios.put(url,body).then(sleep(1000)).then(responseBody),\r\n    del: (url:string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n\r\n}\r\n\r\nconst Activities ={\r\n\r\n    list:():Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id:string) => requests.get(`/activities/${id}`),\r\n    create: (activity:IActivity) => requests.post('/activities',activity),\r\n    update: (activit:IActivity)  => requests.put(`/activities/${activit.id}`,activit),\r\n    delete: (id:string) => requests.del(`/activities/${id}`)\r\n\r\n}\r\n\r\n\r\nconst User ={\r\n    current:():Promise<IUser>=> requests.get('/user'),\r\n    login:(user:IUserFormValues):Promise<IUser> =>requests.post('/user/login',user),\r\n    register:(user:IUserFormValues):Promise<IUser> =>requests.post('/user/register',user)\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    Activities,\r\n    User\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts",["173","174","175"],"import { observable, action,makeAutoObservable,computed,configure,runInAction } from \"mobx\";\r\nimport { createContext, SyntheticEvent } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport agent from \"../api/agent\";\r\nimport {IActivity} from '../models/activity'\r\nimport { RootStore } from \"./rootStore\";\r\n\r\n\r\n\r\nexport default class ActivityStore{\r\n\r\n    rootStore: RootStore;\r\n\r\n    constructor(rootStore:RootStore)\r\n    {\r\n        this.rootStore=rootStore;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    activityRegistry = new Map();\r\n    loadingInitial = false;\r\n    selectedActivity:IActivity |undefined;\r\n    submitting =false;\r\n    target='';\r\n\r\n    // constructor() {\r\n    //     makeAutoObservable(this)\r\n    // }\r\n\r\n    @computed get activitiesByDate(){\r\n        console.log(this.groupActivitiesByDate( Array.from( this.activityRegistry.values())));\r\n        return this.groupActivitiesByDate( Array.from( this.activityRegistry.values()));\r\n    }; \r\n    \r\n    groupActivitiesByDate( activities:IActivity[])\r\n    {\r\n        const sortedActivities= activities.sort((a,b) => Date.parse(a.date) - Date.parse(b.date));\r\n        return Object.entries(sortedActivities.reduce((activities,activity)=>{\r\n            const date=activity.date.split('T')[0];\r\n            activities[date] =activities[date]?[...activities[date],activity]:[activity];\r\n            return activities;\r\n        },{}as {[key:string]:IActivity[]}));\r\n\r\n    }\r\n\r\n    @action loadActivities = async() => {\r\n        this.loadingInitial=true;\r\n        try\r\n        {\r\n            const activities= await agent.Activities.list();\r\n            runInAction( ()=>{\r\n                activities.forEach(actvity=>{\r\n                    actvity.date=actvity.date.split('.')[0];\r\n                    this.activityRegistry.set(actvity.id,actvity);\r\n                  });\r\n                  this.loadingInitial=false;\r\n            });\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.loadingInitial=false;\r\n            })\r\n        }\r\n    };\r\n\r\n    @action LoadActivity =async (id:string) =>\r\n    {\r\n        // Getting atcivity from the activity list \r\n        // Or get activity from Data base that does does exist in the dashboard or refresh the page (no activity in the regirsty)\r\n        let activity= this.getActivity(id);\r\n        if(activity) {\r\n            this.selectedActivity=activity;\r\n        }\r\n       else\r\n       {\r\n            this.loadingInitial=true;\r\n            try\r\n            {\r\n                activity = agent.Activities.details(id);\r\n                runInAction(()=>{\r\n                    this.selectedActivity=activity;\r\n                    this.loadingInitial=false;\r\n        \r\n                });\r\n            }\r\n            catch (ex)\r\n            {\r\n                console.log(ex);\r\n                runInAction(()=>{\r\n                    this.loadingInitial=false;\r\n                });\r\n            }\r\n       } \r\n\r\n    };\r\n\r\n    @action clearActivity=()=>{\r\n\r\n        this.selectedActivity=undefined;\r\n    };\r\n\r\n    getActivity =(id:string) =>{\r\n        return this.activityRegistry.get(id);\r\n    };\r\n\r\n    @action createActivity =async (activity:IActivity)=>\r\n    {\r\n        this.submitting=true;\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            runInAction(()=>{\r\n                this.activityRegistry.set(activity.id,activity);\r\n                this.submitting=false;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error('problem submitting data');\r\n            runInAction(()=>{\r\n                this.submitting=false;\r\n            })\r\n        }\r\n\r\n    };\r\n    @action editActivity = async(activity:IActivity)=>{\r\n\r\n        this.submitting= true;\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(()=>{\r\n\r\n                this.activityRegistry.set(activity.id,activity);\r\n                this.selectedActivity=activity;\r\n                this.submitting=false;\r\n            })\r\n\r\n        } catch (error) {\r\n            runInAction(()=>{\r\n                this.submitting=false;\r\n            })\r\n            toast.error('problem submitting data');\r\n            console.log(error);\r\n        }\r\n\r\n    };\r\n\r\n    @action deleteActivity = async (event:SyntheticEvent<HTMLButtonElement>,id:string) =>{\r\n\r\n        this.submitting=true;\r\n        try {\r\n\r\n            this.target=event.currentTarget.name;\r\n            await agent.Activities.delete(id);\r\n            runInAction(()=>{\r\n                this.activityRegistry.delete(id);\r\n                this.submitting=false;\r\n            })\r\n \r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            runInAction(()=>{\r\n                this.submitting=false;\r\n            })\r\n\r\n        }\r\n    };\r\n\r\n}","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\home\\HomePage.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx",["176"],"import {useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\n const ScrollToTop = ({children, location:{pathname}}:any) => {\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname]);\r\n\r\n    return children;\r\n}\r\nexport default withRouter(ScrollToTop);\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx",["177","178","179","180","181"],"import React, { useContext } from 'react';\r\nimport { Item , Button, Label, Segment, Icon} from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { Link } from 'react-router-dom';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nexport const ActivityListItem:React.FC<{activity:IActivity}> = ({activity}) => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {deleteActivity,submitting,target} =activityStore;\r\n    return (\r\n        <Segment.Group>\r\n            <Segment>\r\n                <Item.Group>\r\n                        <Item>\r\n                        <Item.Image size='tiny' circular src='/assets/user.png'/>\r\n                        <Item.Content>\r\n                        <Item.Header as='a'>{activity.title}</Item.Header>\r\n                        <Item.Description> Hosted by Bob </Item.Description>\r\n                        </Item.Content>\r\n                        </Item>\r\n                </Item.Group>\r\n            </Segment>\r\n            <Segment>\r\n                <Icon name='clock'/>{activity.date}\r\n                <Icon name='marker'/>{activity.venue}, {activity.city}\r\n            </Segment>\r\n            <Segment secondary>\r\n                Attenddess will go here\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button as={Link} to ={`/activities/${activity.id}`} floated='right' content='View' color='blue'></Button>\r\n            </Segment>\r\n        </Segment.Group>\r\n        \r\n    )\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedHeader.tsx",["182"],"import { observe } from 'mobx';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Item, Header, Button,Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\nexport const ActivityDetailedHeader :React.FC<{activity:IActivity}> = ({activity}) => {\r\n    return (\r\n            <Segment.Group>\r\n              <Segment basic attached='top' style={{ padding: '0' }}>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment basic style={activityImageTextStyle}>\r\n                  <Item.Group>\r\n                    <Item>\r\n                      <Item.Content>\r\n                        <Header\r\n                          size='huge'\r\n                          content={activity.title}\r\n                          style={{ color: 'white' }}\r\n                        />\r\n                        <p>{activity.date}</p>\r\n                        <p>\r\n                          Hosted by <strong>Bob</strong>\r\n                        </p>\r\n                      </Item.Content>\r\n                    </Item>\r\n                  </Item.Group>\r\n                </Segment>\r\n              </Segment>\r\n              <Segment clearing attached='bottom'>\r\n                <Button color='teal'>Join Activity</Button>\r\n                <Button>Cancel attendance</Button>\r\n                <Button as={Link} to={`/manage/${activity.id}`} color='orange' floated='right'>\r\n                  Manage Event\r\n                </Button>\r\n              </Segment>\r\n            </Segment.Group>\r\n    )\r\n}\r\nexport default observer (ActivityDetailedHeader);\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedSideBar.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx",["183","184"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form} from 'semantic-ui-react'\r\n\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\n\r\nexport const TextInput:React.FC<IProps> = ({input,width,type, placeholder, meta:{touched,error} }) => {\r\n\r\n return( \r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n     <input {...input} placeholder={placeholder}>\r\n     </input>\r\n     {touched && error && (\r\n        <Label basic color='red'>{error}</Label>\r\n     )}\r\n    </Form.Field>\r\n )\r\n};\r\n\r\nexport default TextInput;\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx",["185","186"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\n\r\nexport const TextAreaInput: React.FC<IProps> = ({input, type, width, placeholder,rows , meta:{touched,error}}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <textarea rows={rows} {...input} placeholder={placeholder}/>\r\n        {touched && error && (\r\n           <Label basic color='red'>{error}</Label>\r\n        )}\r\n       </Form.Field>\r\n    )\r\n}\r\nexport default TextAreaInput;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx",["187","188"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form, Select} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\nexport const SelectInput:React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    options,\r\n    placeholder,\r\n    meta:{touched,error}\r\n\r\n}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <Select value={input.value}\r\n        onChange={(e,data)=> input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}/>\r\n        {touched && error && (\r\n           <Label basic color='red'>{error}</Label>\r\n        )}\r\n       </Form.Field>\r\n    )\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\categoryOptionsts.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\userStore.ts",["189"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\LoginForm.tsx",["190","191","192","193"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\commonStore.ts",["194"],"import { tr } from \"date-fns/locale\";\r\nimport { action, observable, reaction } from \"mobx\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class CommonStore {\r\n    rootStore :RootStore;\r\n\r\n    constructor(rootStore:RootStore)\r\n    {\r\n        this.rootStore=rootStore;\r\n        reaction(()=>this.token,\r\n        token=> {\r\n            if(token)\r\n            {\r\n                window.localStorage.setItem('jwt',token);\r\n            }\r\n            else{\r\n                window.localStorage.removeItem('jwt');\r\n            }\r\n        })\r\n    }\r\n\r\n    @observable token:string |null=window.localStorage.getItem('jwt');\r\n    @observable appLoaded= false;\r\n\r\n    @action setToken=(token:string | null)=>{\r\n        this.token=token;\r\n    }\r\n    @action setAppLoaded = ()=> {\r\n        this.appLoaded=true;\r\n    }\r\n}","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\modals\\ModalContainer.tsx",["195","196"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessage.tsx",["197"],"import { AxiosResponse } from 'axios'\r\nimport React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\ninterface IProps {\r\n    error:AxiosResponse,\r\n    text:string\r\n}\r\nexport const ErrorMessage:React.FC<IProps> = ({error,text}) => {\r\n    return (\r\n        <Message error>\r\n            <Message.Header>{error.statusText}</Message.Header>\r\n\r\n            {text &&<Message.Content content={text}></Message.Content>}\r\n        </Message>\r\n    )\r\n}\r\n",["198","199"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessageViewer.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\RegisterForm.tsx",["200","201","202","203"],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":14,"column":10,"nodeType":"210","messageId":"211","endLine":14,"endColumn":16},{"ruleId":"208","severity":1,"message":"212","line":15,"column":10,"nodeType":"210","messageId":"211","endLine":15,"endColumn":25},{"ruleId":"208","severity":1,"message":"213","line":21,"column":29,"nodeType":"210","messageId":"211","endLine":21,"endColumn":38},{"ruleId":"208","severity":1,"message":"214","line":4,"column":39,"nodeType":"210","messageId":"211","endLine":4,"endColumn":51},{"ruleId":"208","severity":1,"message":"215","line":10,"column":12,"nodeType":"210","messageId":"211","endLine":10,"endColumn":22},{"ruleId":"208","severity":1,"message":"216","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":21},{"ruleId":"208","severity":1,"message":"217","line":7,"column":10,"nodeType":"210","messageId":"211","endLine":7,"endColumn":19},{"ruleId":"208","severity":1,"message":"218","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":15},{"ruleId":"208","severity":1,"message":"219","line":4,"column":24,"nodeType":"210","messageId":"211","endLine":4,"endColumn":31},{"ruleId":"208","severity":1,"message":"216","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":21},{"ruleId":"208","severity":1,"message":"216","line":6,"column":8,"nodeType":"210","messageId":"211","endLine":6,"endColumn":21},{"ruleId":"208","severity":1,"message":"216","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":21},{"ruleId":"208","severity":1,"message":"220","line":13,"column":47,"nodeType":"210","messageId":"211","endLine":13,"endColumn":63},{"ruleId":"221","severity":1,"message":"222","line":52,"column":7,"nodeType":"223","endLine":52,"endColumn":68,"suggestions":"224"},{"ruleId":"208","severity":1,"message":"225","line":64,"column":11,"nodeType":"210","messageId":"211","endLine":64,"endColumn":28},{"ruleId":"208","severity":1,"message":"226","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":18},{"ruleId":"208","severity":1,"message":"227","line":35,"column":19,"nodeType":"210","messageId":"211","endLine":35,"endColumn":23},{"ruleId":"208","severity":1,"message":"228","line":35,"column":24,"nodeType":"210","messageId":"211","endLine":35,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":92,"column":1,"nodeType":"231","endLine":95,"endColumn":2},{"ruleId":"208","severity":1,"message":"232","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":20},{"ruleId":"208","severity":1,"message":"233","line":1,"column":57,"nodeType":"210","messageId":"211","endLine":1,"endColumn":66},{"ruleId":"208","severity":1,"message":"234","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":23},{"ruleId":"208","severity":1,"message":"235","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"236","line":2,"column":25,"nodeType":"210","messageId":"211","endLine":2,"endColumn":30},{"ruleId":"208","severity":1,"message":"216","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":21},{"ruleId":"208","severity":1,"message":"237","line":12,"column":12,"nodeType":"210","messageId":"211","endLine":12,"endColumn":26},{"ruleId":"208","severity":1,"message":"238","line":12,"column":27,"nodeType":"210","messageId":"211","endLine":12,"endColumn":37},{"ruleId":"208","severity":1,"message":"239","line":12,"column":38,"nodeType":"210","messageId":"211","endLine":12,"endColumn":44},{"ruleId":"208","severity":1,"message":"240","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":17},{"ruleId":"208","severity":1,"message":"241","line":2,"column":36,"nodeType":"210","messageId":"211","endLine":2,"endColumn":45},{"ruleId":"208","severity":1,"message":"242","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":19},{"ruleId":"208","severity":1,"message":"241","line":2,"column":36,"nodeType":"210","messageId":"211","endLine":2,"endColumn":45},{"ruleId":"208","severity":1,"message":"242","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":19},{"ruleId":"208","severity":1,"message":"241","line":2,"column":36,"nodeType":"210","messageId":"211","endLine":2,"endColumn":45},{"ruleId":"208","severity":1,"message":"242","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":19},{"ruleId":"208","severity":1,"message":"243","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":12},{"ruleId":"208","severity":1,"message":"236","line":5,"column":32,"nodeType":"210","messageId":"211","endLine":5,"endColumn":37},{"ruleId":"208","severity":1,"message":"244","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":22},{"ruleId":"245","severity":1,"message":"246","line":36,"column":43,"nodeType":"247","messageId":"248","endLine":36,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":36,"column":67,"nodeType":"247","messageId":"248","endLine":36,"endColumn":69},{"ruleId":"208","severity":1,"message":"249","line":1,"column":10,"nodeType":"210","messageId":"211","endLine":1,"endColumn":12},{"ruleId":"208","severity":1,"message":"250","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":16},{"ruleId":"208","severity":1,"message":"251","line":3,"column":18,"nodeType":"210","messageId":"211","endLine":3,"endColumn":24},{"ruleId":"208","severity":1,"message":"252","line":3,"column":19,"nodeType":"210","messageId":"211","endLine":3,"endColumn":32},{"ruleId":"204","replacedBy":"253"},{"ruleId":"206","replacedBy":"254"},{"ruleId":"208","severity":1,"message":"236","line":5,"column":32,"nodeType":"210","messageId":"211","endLine":5,"endColumn":37},{"ruleId":"208","severity":1,"message":"244","line":6,"column":10,"nodeType":"210","messageId":"211","endLine":6,"endColumn":22},{"ruleId":"245","severity":1,"message":"246","line":39,"column":43,"nodeType":"247","messageId":"248","endLine":39,"endColumn":45},{"ruleId":"245","severity":1,"message":"246","line":39,"column":67,"nodeType":"247","messageId":"248","endLine":39,"endColumn":69},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"@typescript-eslint/no-unused-vars","'getuid' is defined but never used.","Identifier","unusedVar","'LoadingCompnent' is defined but never used.","'appLoaded' is assigned a value but never used.","'DropdownMenu' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'ActivityStore' is defined but never used.","'RootStore' is defined but never used.","'group' is defined but never used.","'Segment' is defined but never used.","'hasLengthBetween' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activity.id.length'. Either include it or remove the dependency array.","ArrayExpression",["257"],"'handleInputChange' is assigned a value but never used.","'promises' is defined but never used.","'data' is assigned a value but never used.","'config' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'observable' is defined but never used.","'configure' is defined but never used.","'createContext' is defined but never used.","'React' is defined but never used.","'Label' is defined but never used.","'deleteActivity' is assigned a value but never used.","'submitting' is assigned a value but never used.","'target' is assigned a value but never used.","'observe' is defined but never used.","'FinalForm' is defined but never used.","'FormField' is defined but never used.","'ca' is defined but never used.","'ErrorMessage' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'tr' is defined but never used.","'Button' is defined but never used.","'Header' is defined but never used.","'MessageHeader' is defined but never used.",["255"],["256"],"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},"Update the dependencies array to be: [LoadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]",{"range":"260","text":"261"},[2054,2115],"[LoadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]"]