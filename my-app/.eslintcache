[{"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx":"1","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx":"4","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx":"8"},{"size":566,"mtime":1609510796450,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2456,"mtime":1610095363932,"results":"12","hashOfConfig":"10"},{"size":712,"mtime":1609523941396,"results":"13","hashOfConfig":"10"},{"size":1943,"mtime":1610095435826,"results":"14","hashOfConfig":"10"},{"size":1323,"mtime":1610095577944,"results":"15","hashOfConfig":"10"},{"size":1236,"mtime":1609524613680,"results":"16","hashOfConfig":"10"},{"size":2691,"mtime":1609787886071,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"q2xiso",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx",[],["37","38"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",["39","40","41","42"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["43","44","45"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["46"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx",["47","48"],"import React from 'react'\r\nimport { act } from 'react-dom/test-utils';\r\nimport { Card,Image,Icon, Button } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\n\r\ninterface Iprops\r\n{\r\n    activity:IActivity;\r\n    setEditMode:(editMode:boolean)=> void;\r\n    setSelectedActivity:(activity:IActivity |null) => void;\r\n}\r\nexport const ActivityDetails:React.FC<Iprops> = ({activity,setEditMode,setSelectedActivity}) => {\r\n    return (\r\n        <Card fluid>\r\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} wrapped ui={false} />\r\n        <Card.Content>\r\n          <Card.Header>{activity.title}</Card.Header>\r\n          <Card.Meta>\r\n            <span>{activity.date}</span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n            {activity.description}\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Button.Group widths={2}>\r\n              <Button onClick={()=>setEditMode(true)} basic color='blue' content=\"Edit\" />\r\n              <Button onClick={()=>setSelectedActivity(null)} basic color='grey' content=\"Cancel\"/>\r\n          </Button.Group>\r\n        </Card.Content>\r\n      </Card>\r\n    )\r\n}\r\nexport default ActivityDetails;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx",["49","50"],"import { on } from 'process';\r\nimport React,{FormEvent, useState} from 'react'\r\nimport { act } from 'react-dom/test-utils';\r\nimport { Button, Form, Segment } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid';\r\n\r\ninterface Iprops{\r\n    setEditMode:(editMode:boolean)=> void;\r\n    activity : IActivity;\r\n    createActivity : (activity:IActivity) =>void;\r\n    editActivity : (activity :IActivity) => void;\r\n}\r\n\r\nexport const ActivityForm:React.FC<Iprops> = ({setEditMode, activity:initialFormState,createActivity,editActivity}) => {\r\n    const initializeForm = ()=>\r\n    {\r\n        if(initialFormState)\r\n        {\r\n            return initialFormState;\r\n        }\r\n        else\r\n        {\r\n            return {\r\n                id:'',\r\n                title:'',\r\n                category:'',\r\n                date:'',\r\n                city:'',\r\n                venue:'',\r\n                description:''\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const [activity,setActivity]=useState<IActivity>(initializeForm);\r\n\r\n    const handleInputChange=(event:FormEvent<HTMLInputElement|HTMLTextAreaElement>)=>{\r\n        const{name,value} =event.currentTarget;\r\n        setActivity({...activity,[name]:value});\r\n    };\r\n\r\n    const handleSubmit =()=>{\r\n        if(activity.id.length ===0)\r\n        {\r\n            let newActivity={\r\n                ...activity,\r\n                id:uuid()\r\n            }\r\n            createActivity(newActivity);\r\n        }\r\n        else{\r\n            editActivity(activity);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Input onChange={handleInputChange} name='title' placeholder='Title' value={activity.title}/>\r\n                <Form.TextArea onChange={handleInputChange} name='description' rows={2} placeholder='Description' value={activity.description} />\r\n                <Form.Input onChange={handleInputChange} name='category' placeholder='Catgeory' value={activity.category}/>\r\n                <Form.Input onChange={handleInputChange} name='date' type='datetime-local' placeholder='Date' value={activity.date} />\r\n                <Form.Input onChange={handleInputChange} name='city' placeholder='City' value={activity.city}/>\r\n                <Form.Input onChange={handleInputChange} name='venue' placeholder='Venue' value={activity.venue}/>\r\n                <Button floated='right' positive type='submit' content='Submit'/>\r\n                <Button floated='right' type='button' content='Cancel' onClick={()=>setEditMode(false)}/>\r\n            </Form>\r\n        </Segment>\r\n    );\r\n}\r\nexport default ActivityForm;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":21,"nodeType":"57","messageId":"58","endLine":3,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":3,"column":29,"nodeType":"57","messageId":"58","endLine":3,"endColumn":33},{"ruleId":"55","severity":1,"message":"60","line":3,"column":35,"nodeType":"57","messageId":"58","endLine":3,"endColumn":39},{"ruleId":"55","severity":1,"message":"61","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":13},{"ruleId":"55","severity":1,"message":"60","line":2,"column":28,"nodeType":"57","messageId":"58","endLine":2,"endColumn":32},{"ruleId":"62","severity":1,"message":"63","line":46,"column":39,"nodeType":"64","messageId":"65","endLine":46,"endColumn":41},{"ruleId":"62","severity":1,"message":"63","line":46,"column":62,"nodeType":"64","messageId":"65","endLine":46,"endColumn":64},{"ruleId":"55","severity":1,"message":"66","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":21},{"ruleId":"55","severity":1,"message":"61","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":13},{"ruleId":"55","severity":1,"message":"59","line":3,"column":21,"nodeType":"57","messageId":"58","endLine":3,"endColumn":25},{"ruleId":"55","severity":1,"message":"67","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"61","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":13},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'List' is defined but never used.","'act' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Image' is defined but never used.","'on' is defined but never used.","no-global-assign","no-unsafe-negation"]