[{"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx":"1","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx":"4","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx":"7","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx":"8","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts":"9","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx":"10","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts":"11","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\models\\activity.ts":"12","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\home\\HomePage.tsx":"13","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx":"14","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx":"15","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedHeader.tsx":"16","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedInfo.tsx":"17","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedChat.tsx":"18","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedSideBar.tsx":"19","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx":"20","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx":"21","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx":"22","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx":"23","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\categoryOptionsts.ts":"24","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\rootStore.ts":"25","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\userStore.ts":"26","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\LoginForm.tsx":"27","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\commonStore.ts":"28","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\modalStore.ts":"29","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\modals\\ModalContainer.tsx":"30","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessage.tsx":"31","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessageViewer.tsx":"32","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\RegisterForm.tsx":"33","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItemAttendees.tsx":"34"},{"size":1017,"mtime":1612528031235,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":499162500000,"results":"37","hashOfConfig":"36"},{"size":2254,"mtime":1614361151066,"results":"38","hashOfConfig":"36"},{"size":1656,"mtime":1614357617045,"results":"39","hashOfConfig":"36"},{"size":1151,"mtime":1614346984706,"results":"40","hashOfConfig":"36"},{"size":1150,"mtime":1614346809910,"results":"41","hashOfConfig":"36"},{"size":1754,"mtime":1614959379281,"results":"42","hashOfConfig":"36"},{"size":4557,"mtime":1614960232642,"results":"43","hashOfConfig":"36"},{"size":3060,"mtime":1614963905609,"results":"44","hashOfConfig":"36"},{"size":334,"mtime":1610100944050,"results":"45","hashOfConfig":"36"},{"size":7949,"mtime":1614965075366,"results":"46","hashOfConfig":"36"},{"size":523,"mtime":1613216374050,"results":"47","hashOfConfig":"36"},{"size":1759,"mtime":1614404470994,"results":"48","hashOfConfig":"36"},{"size":313,"mtime":1610716654069,"results":"49","hashOfConfig":"36"},{"size":2566,"mtime":1614961840176,"results":"50","hashOfConfig":"36"},{"size":2428,"mtime":1614964601929,"results":"51","hashOfConfig":"36"},{"size":1745,"mtime":1610813377424,"results":"52","hashOfConfig":"36"},{"size":2454,"mtime":1610813644337,"results":"53","hashOfConfig":"36"},{"size":1966,"mtime":1614963788884,"results":"54","hashOfConfig":"36"},{"size":629,"mtime":1611308813871,"results":"55","hashOfConfig":"36"},{"size":666,"mtime":1612523374988,"results":"56","hashOfConfig":"36"},{"size":687,"mtime":1612524062855,"results":"57","hashOfConfig":"36"},{"size":777,"mtime":1612526412650,"results":"58","hashOfConfig":"36"},{"size":346,"mtime":1612526054038,"results":"59","hashOfConfig":"36"},{"size":722,"mtime":1614361010339,"results":"60","hashOfConfig":"36"},{"size":1872,"mtime":1614958715100,"results":"61","hashOfConfig":"36"},{"size":1886,"mtime":1614403959428,"results":"62","hashOfConfig":"36"},{"size":832,"mtime":1614958221173,"results":"63","hashOfConfig":"36"},{"size":591,"mtime":1614403420256,"results":"64","hashOfConfig":"36"},{"size":565,"mtime":1614403341623,"results":"65","hashOfConfig":"36"},{"size":454,"mtime":1614363542997,"results":"66","hashOfConfig":"36"},{"size":777,"mtime":1614405445809,"results":"67","hashOfConfig":"36"},{"size":2125,"mtime":1614405074789,"results":"68","hashOfConfig":"36"},{"size":695,"mtime":1614959222449,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"q2xiso",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"72"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\index.tsx",[],["155","156"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\App.tsx",["157","158","159"],"import React ,{Fragment, useContext, useEffect} from  'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from '../../feature/nav/NavBar';\nimport ActivityDashboard from '../../feature/activities/dashboard/ActivityDashboard';\nimport {observer} from 'mobx-react-lite';\nimport { Route,RouteComponentProps,Switch,withRouter } from 'react-router-dom';\nimport { HomePage } from '../../feature/home/HomePage';\nimport { ActivityForm } from '../../feature/activities/form/ActivityForm';\nimport { ActivityDetails } from '../../feature/activities/details/ActivityDetails';\nimport NotFound from './NotFound';\nimport { ToastContainer } from 'react-toastify';\nimport LoginForm from '../../feature/user/LoginForm';\nimport { RootStoreContext } from '../stores/rootStore';\nimport { getuid } from 'process';\nimport { LoadingCompnent } from './LoadingCompnent';\nimport ModalContainer from '../common/modals/ModalContainer';\n\nconst App:React.FC<RouteComponentProps> = ({location}) => {\n\n  const rootStore=useContext(RootStoreContext);\n  const {setAppLoaded,token,appLoaded} =rootStore.commonStore;\n  const {getUser} = rootStore.userStore;\n\n  useEffect(()=>{\n    if(token)\n    {\n      getUser().finally(()=>setAppLoaded())\n    }\n    else\n    {\n      setAppLoaded()\n    }\n  },[getUser,setAppLoaded,token])\n\n \n\n    return (\n      <Fragment>\n        <ModalContainer></ModalContainer>\n        <ToastContainer position='top-right'/> \n        <Route exact path='/' component={HomePage} />\n        <Route path={'/(.+)'} render={() => (\n                <Fragment>\n                 <NavBar />\n                 <Container style={{marginTop:'7em'}}>\n                   <Switch>\n                    <Route exact path='/activities' component={ActivityDashboard}/>\n                    <Route  path='/activities/:id' component={ActivityDetails}/>\n                    <Route key={location.key} path= {['/createActivity','/manage/:id']} component={ActivityForm}/>\n                    <Route path='/login' component={LoginForm}/>\n                    <Route component={NotFound}/>\n                   </Switch>\n                 </Container>\n                 \n                 </Fragment>\n        )}></Route>\n      </Fragment>\n    );\n}\nexport default withRouter(observer(App));\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\nav\\NavBar.tsx",["160","161"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport {  Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, DropdownMenu, Image, Menu } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\n\r\nexport const NavBar:React.FC = () => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const {isLoggedIn,user,logout} = rootStore.userStore;\r\n    return (\r\n        <Menu fixed='top' inverted>\r\n            <Container>\r\n            <Menu.Item header as ={NavLink} exact to='/' >\r\n                <img src=\"/assets/logo.png\" alt=\"logo\"style={{marginRight:10}} ></img> Reactivities\r\n            </Menu.Item>\r\n            <Menu.Item  name='Activities' as={NavLink} to ='/activities'/>\r\n            <Menu.Item >\r\n                <Button as={NavLink} to='/createActivity' positive content='Create Activity'></Button>\r\n            </Menu.Item>\r\n            {user && (\r\n                    <Menu.Item position='right'>\r\n                      <Image avatar spaced='right' src={user.imgae ||'/assets/user.png'} />\r\n                      <Dropdown pointing='top left' text={user.displayName}>\r\n                        <Dropdown.Menu>\r\n                          <Dropdown.Item as={Link} to={`/profile/username`} text='My profile' icon='user'/>\r\n                           <Dropdown.Item  onClick={logout} text='Logout' icon='power' /> \r\n                        </Dropdown.Menu>\r\n                      </Dropdown>\r\n                    </Menu.Item>)}\r\n                    </Container>\r\n                    </Menu>\r\n\r\n    )\r\n};\r\nexport default observer( NavBar);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["162","163"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Grid, GridColumn } from 'semantic-ui-react';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { LoadingCompnent } from '../../../app/layout/LoadingCompnent';\r\nimport { RootStore, RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\nexport const ActivityDashboard :React.FC = () => {\r\n    // const activityStore = useContext(ActivityStore);\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n\r\n \r\n    useEffect(() => {\r\n       activityStore.loadActivities();\r\n       },[activityStore]);\r\n     \r\n     if(activityStore.loadingInitial) return <LoadingCompnent content='Loading activites...'></LoadingCompnent>;\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10} >\r\n                <ActivityList />\r\n            </Grid.Column>\r\n            <GridColumn width={6}>\r\n               <h2>Activity filters</h2>\r\n            </GridColumn>\r\n        </Grid>\r\n    )\r\n}\r\nexport default observer(ActivityDashboard) ;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["164","165","166"],"import { group } from 'console';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { Fragment, useContext } from 'react'\r\nimport { Item , Label, Segment} from 'semantic-ui-react';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { ActivityListItem } from './ActivityListItem';\r\n\r\nexport const ActivityList:React.FC = () => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {activitiesByDate} =activityStore;\r\n    return (\r\n        <Fragment>\r\n          {activitiesByDate.map(([group,activities])=>(\r\n            <Fragment key={group}>\r\n              <Label size='large' color='blue'>{group}</Label>\r\n                <Item.Group divided>\r\n                  {activities.map(activity =>(\r\n                <ActivityListItem activity={activity} ></ActivityListItem>\r\n                ))}\r\n                </Item.Group>\r\n            </Fragment>\r\n          ))}\r\n\r\n      </Fragment>\r\n\r\n\r\n    )\r\n}\r\nexport default observer(ActivityList);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetails.tsx",["167"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext,useEffect } from 'react'\r\nimport {  RouteComponentProps } from 'react-router-dom';\r\nimport {  Grid } from 'semantic-ui-react';\r\nimport { LoadingCompnent } from '../../../app/layout/LoadingCompnent';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { ActivityDetailedChat } from './ActivityDetailedChat';\r\nimport { ActivityDetailedHeader } from './ActivityDetailedHeader';\r\nimport { ActivityDetailedInfo } from './ActivityDetailedInfo';\r\nimport { ActivityDetailedSideBar } from './ActivityDetailedSideBar';\r\n\r\ninterface DetailsParams\r\n{\r\n  id:string\r\n}\r\nexport const ActivityDetails:React.FC<RouteComponentProps<DetailsParams>> = ({match,history}) => {\r\n\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {selectedActivity:activity,LoadActivity,loadingInitial} = activityStore;\r\n\r\n    useEffect(() => {\r\n    LoadActivity(match.params.id)\r\n    },[LoadActivity,match.params.id]);\r\n\r\n    if(loadingInitial || !activity) return (<LoadingCompnent content='Loading activity...'></LoadingCompnent>)\r\n    if(!activity) return <h2>activity not found</h2>\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailedHeader activity={activity}/>\r\n          <ActivityDetailedInfo activity={activity}/>\r\n          <ActivityDetailedChat/>\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar attendees ={activity.attendees}/>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n}\r\nexport default observer(ActivityDetails) ;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\form\\ActivityForm.tsx",["168","169","170","171"],"import React,{FormEvent, useContext, useEffect, useState} from 'react'\r\nimport { Button, Form, Grid, GridColumn, Segment } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport {v4 as uuid} from 'uuid';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Form as FinalForm, Field} from 'react-final-form';\r\nimport TextInput from '../../../app/common/form/TextInput';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport { SelectInput } from '../../../app/common/form/SelectInput';\r\nimport { category } from '../../../app/common/form/categoryOptionsts';\r\nimport {combineValidators, composeValidators, hasLengthBetween, hasLengthGreaterThan, isRequired} from 'revalidate';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\n\r\n\r\nconst validate=combineValidators({\r\n\r\n    title:isRequired({message:'Event title is requied'}),\r\n    category: isRequired('Category'),\r\n    description: composeValidators(isRequired('description'),\r\n    hasLengthGreaterThan(4)({message:'Description needs to be at least 5 charachters'}))(),\r\n    city:isRequired('City'),\r\n    date:isRequired('Date'),\r\n    venue:isRequired('Venue')\r\n\r\n\r\n})\r\n\r\n\r\ninterface DetailsParams\r\n{\r\n    id:string\r\n}\r\n\r\nexport const ActivityForm:React.FC<RouteComponentProps<DetailsParams>> = ({history,match}) => {\r\n\r\n    const rootStore= useContext(RootStoreContext);\r\n    const activityStore = rootStore.activityStore;\r\n    // const activityStore= useContext(ActivityStore);\r\n    const {createActivity,editActivity,submitting,selectedActivity:initialFormState,LoadActivity,clearActivity}= activityStore;\r\n\r\n    useEffect(()=>{\r\n        if(match.params.id && activity.id.length ===0)\r\n        {\r\n            LoadActivity(match.params.id).then(\r\n                ()=> initialFormState && setActivity(initialFormState));\r\n        }\r\n        return () =>{\r\n            clearActivity();\r\n        }\r\n    },[LoadActivity,clearActivity,match.params.id,initialFormState]);\r\n    // OLD code \r\n    const [activity,setActivity]=useState<IActivity>({\r\n        id:'',\r\n        title:'',\r\n        category:'',\r\n        date:'',\r\n        city:'',\r\n        venue:'',\r\n        description:'' ,\r\n        attendees:[],\r\n        isGoing:false,\r\n        isHost:false,\r\n    });\r\n\r\n    const handleInputChange=(event:FormEvent<HTMLInputElement|HTMLTextAreaElement>)=>{\r\n        const{name,value} =event.currentTarget;\r\n        setActivity({...activity,[name]:value});\r\n    };\r\n\r\n\r\n    const handleFinalFormSubmit = (values:any)=>{\r\n        if(activity.id.length ===0)\r\n        {\r\n            let newActivity={\r\n                ...activity,\r\n                id:uuid()\r\n            }\r\n            createActivity(newActivity).then(()=>history.push(`/activities/${newActivity.id}`));\r\n        }\r\n        else{\r\n            editActivity(activity).then(()=>history.push(`/activities/${activity.id}`));\r\n        }\r\n        console.log(values);\r\n    }\r\n\r\n    return (\r\n        <Grid>\r\n            <GridColumn width={10}>\r\n            <Segment clearing>\r\n                <FinalForm\r\n                validate={validate}\r\n                onSubmit={handleFinalFormSubmit}\r\n                initialValues={activity}\r\n                render={({handleSubmit, invalid,pristine})=> (\r\n                <Form onSubmit={handleSubmit}>\r\n                <Field component={TextInput}  name='title' placeholder='Title' value={activity.title} />\r\n                <Field component={TextAreaInput} rows={3} name='description' placeholder='Description' value={activity.description} />\r\n                <Field component={SelectInput} options={category} name='category' placeholder='Catgeory' value={activity.category}/>\r\n                <Field component={TextInput} type='Date' name='date'  placeholder='Date' value={activity.date} />\r\n                <Field component={TextInput} name='city' placeholder='City' value={activity.city}/>\r\n                <Field component={TextInput} name='venue' placeholder='Venue' value={activity.venue}/>\r\n                <Button loading={submitting} floated='right' positive type='submit' content='Submit' disabled={invalid || pristine}/>\r\n                <Button floated='right' type='button' content='Cancel' onClick={()=> history.push('/activities')}/>\r\n            </Form>\r\n                )}/>\r\n        </Segment>\r\n            </GridColumn>\r\n        </Grid>\r\n      \r\n    );\r\n}\r\nexport default observer(ActivityForm);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\api\\agent.ts",["172","173","174","175"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\LoadingCompnent.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\activityStore.ts",["176","177","178","179","180","181"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\models\\activity.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\home\\HomePage.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\ScrollToTop.tsx",["182"],"import {useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\n const ScrollToTop = ({children, location:{pathname}}:any) => {\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname]);\r\n\r\n    return children;\r\n}\r\nexport default withRouter(ScrollToTop);\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx",["183","184","185","186"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedHeader.tsx",["187"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedInfo.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedChat.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\details\\ActivityDetailedSideBar.tsx",["188","189"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextInput.tsx",["190","191"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form} from 'semantic-ui-react'\r\n\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\n\r\nexport const TextInput:React.FC<IProps> = ({input,width,type, placeholder, meta:{touched,error} }) => {\r\n\r\n return( \r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n     <input {...input} placeholder={placeholder}>\r\n     </input>\r\n     {touched && error && (\r\n        <Label basic color='red'>{error}</Label>\r\n     )}\r\n    </Form.Field>\r\n )\r\n};\r\n\r\nexport default TextInput;\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\TextAreaInput.tsx",["192","193"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\n\r\nexport const TextAreaInput: React.FC<IProps> = ({input, type, width, placeholder,rows , meta:{touched,error}}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <textarea rows={rows} {...input} placeholder={placeholder}/>\r\n        {touched && error && (\r\n           <Label basic color='red'>{error}</Label>\r\n        )}\r\n       </Form.Field>\r\n    )\r\n}\r\nexport default TextAreaInput;","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\SelectInput.tsx",["194","195"],"import React from 'react'\r\nimport { FieldRenderProps, Form as FinalForm } from 'react-final-form'\r\nimport { FormField, FormFieldProps, Label , Form, Select} from 'semantic-ui-react'\r\n\r\ninterface IProps extends FieldRenderProps<string,HTMLElement>,FormFieldProps\r\n{\r\n\r\n}\r\nexport const SelectInput:React.FC<IProps> = ({\r\n    input,\r\n    width,\r\n    options,\r\n    placeholder,\r\n    meta:{touched,error}\r\n\r\n}) => {\r\n    return (\r\n        <Form.Field error={touched && !!error} width={width}>\r\n        <Select value={input.value}\r\n        onChange={(e,data)=> input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}/>\r\n        {touched && error && (\r\n           <Label basic color='red'>{error}</Label>\r\n        )}\r\n       </Form.Field>\r\n    )\r\n}\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\categoryOptionsts.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\LoginForm.tsx",["196","197","198","199"],"import { FORM_ERROR } from 'final-form';\r\nimport React, { useContext } from 'react'\r\nimport {Form as FinalForm,Field} from 'react-final-form'\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Button, Form, Header, Label } from 'semantic-ui-react'\r\nimport { ErrorMessage } from '../../app/common/form/ErrorMessage';\r\nimport ErrorMessageViewer from '../../app/common/form/ErrorMessageViewer';\r\nimport TextInput from '../../app/common/form/TextInput'\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\n\r\nconst validate =combineValidators({\r\n    email:isRequired('email'),\r\n    password:isRequired('password')\r\n})\r\n\r\nexport const LoginForm = () => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const {login} = rootStore.userStore;\r\n    \r\n\r\n    return (\r\n        <FinalForm onSubmit={(values:IUserFormValues)=>login(values).catch(error=>({\r\n            [FORM_ERROR]:error\r\n        }))}\r\n        validate={validate}\r\n        \r\n        render ={({handleSubmit,submitting,form,submitError,invalid,pristine,dirtySinceLastSubmit})=>(\r\n            <Form onSubmit={handleSubmit} error >\r\n                <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'></Header>\r\n                <Field name='email' component={TextInput} placeholder=\"Email\" />\r\n                <Field name=\"password\" component={TextInput} type=\"password\" placeholder=\"Password\"/>\r\n                {submitError && !dirtySinceLastSubmit && (<ErrorMessageViewer text='Invalid email or password' error={submitError}/>)}\r\n                <br/>\r\n                <Button disabled={invalid && !dirtySinceLastSubmit||pristine} loading={submitting} positive content=\"Login\" color='teal' fluid/>\r\n                \r\n            </Form>\r\n\r\n        )}\r\n        />\r\n\r\n    );\r\n};\r\nexport default LoginForm\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\commonStore.ts",["200"],"import { tr } from \"date-fns/locale\";\r\nimport { action, observable, reaction } from \"mobx\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class CommonStore {\r\n    rootStore :RootStore;\r\n\r\n    constructor(rootStore:RootStore)\r\n    {\r\n        this.rootStore=rootStore;\r\n        reaction(()=>this.token,\r\n        token=> {\r\n            if(token)\r\n            {\r\n\r\n                window.localStorage.setItem('jwt',token);\r\n            }\r\n            else{\r\n                window.localStorage.removeItem('jwt');\r\n            }\r\n        })\r\n    }\r\n\r\n    @observable token:string |null=window.localStorage.getItem('jwt');\r\n    @observable appLoaded= false;\r\n\r\n    @action setToken=(token:string | null)=>{\r\n        this.token=token;\r\n       \r\n    }\r\n    @action setAppLoaded = ()=> {\r\n        this.appLoaded=true;\r\n    }\r\n}","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\modals\\ModalContainer.tsx",["201","202"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react'\r\nimport { Button, Header, Modal } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../stores/rootStore'\r\n\r\nexport const ModalContainer = () => {\r\n\r\n    const rootStore= useContext(RootStoreContext);\r\n    const {modal:{open,body},closeModal}= rootStore.modalStore;\r\n    return (\r\n        <Modal open={open} onClose={closeModal} size='mini'>\r\n      <Modal.Content > {body}\r\n          </Modal.Content>\r\n    </Modal>\r\n    )\r\n}\r\nexport default observer(ModalContainer);","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessage.tsx",["203"],"import { AxiosResponse } from 'axios'\r\nimport React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\ninterface IProps {\r\n    error:AxiosResponse,\r\n    text:string\r\n}\r\nexport const ErrorMessage:React.FC<IProps> = ({error,text}) => {\r\n    return (\r\n        <Message error>\r\n            <Message.Header>{error.statusText}</Message.Header>\r\n\r\n            {text &&<Message.Content content={text}></Message.Content>}\r\n        </Message>\r\n    )\r\n}\r\n",["204","205"],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\app\\common\\form\\ErrorMessageViewer.tsx",[],"C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\user\\RegisterForm.tsx",["206","207","208","209"],"import { FORM_ERROR } from 'final-form';\r\nimport React, { useContext } from 'react'\r\nimport {Form as FinalForm,Field} from 'react-final-form'\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport { Button, Form, Header, Label } from 'semantic-ui-react'\r\nimport { ErrorMessage } from '../../app/common/form/ErrorMessage';\r\nimport ErrorMessageViewer from '../../app/common/form/ErrorMessageViewer';\r\nimport TextInput from '../../app/common/form/TextInput'\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\n\r\nconst validate =combineValidators({\r\n    email:isRequired('email'),\r\n    password:isRequired('password'),\r\n    username:isRequired('username'),\r\n    displayname:isRequired('displayname')\r\n})\r\n\r\nexport const RegisterForm = () => {\r\n    const rootStore= useContext(RootStoreContext);\r\n    const {register} = rootStore.userStore;\r\n    \r\n    return (\r\n        <FinalForm onSubmit={(values:IUserFormValues)=>register(values).catch(error=>({\r\n            [FORM_ERROR]:error\r\n        }))}\r\n\r\n        validate={validate}\r\n        render ={({handleSubmit,submitting,form,submitError,invalid,pristine,dirtySinceLastSubmit})=>(\r\n            <Form onSubmit={handleSubmit} error >\r\n                <Header as='h2' content='Signup to Reactivities' color='teal' textAlign='center'></Header>\r\n                <Field name='username' component={TextInput} placeholder=\"Username\" />\r\n                <Field name='displayname' component={TextInput} placeholder=\"Display Name\" />\r\n                <Field name='email' component={TextInput} placeholder=\"Email\" />\r\n                <Field name=\"password\" component={TextInput} type=\"password\" placeholder=\"Password\"/>\r\n                {submitError && !dirtySinceLastSubmit && (<ErrorMessageViewer  error={submitError}/>)}\r\n                <br/>\r\n                <Button disabled={invalid && !dirtySinceLastSubmit||pristine} loading={submitting} positive content=\"Register\" color='teal' fluid/>\r\n                \r\n            </Form>\r\n\r\n        )}\r\n        />\r\n\r\n    );\r\n};\r\nexport default RegisterForm\r\n","C:\\Users\\Mohannad-Pc\\source\\repos\\Reactivities\\my-app\\src\\feature\\activities\\dashboard\\ActivityListItemAttendees.tsx",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":14,"column":10,"nodeType":"216","messageId":"217","endLine":14,"endColumn":16},{"ruleId":"214","severity":1,"message":"218","line":15,"column":10,"nodeType":"216","messageId":"217","endLine":15,"endColumn":25},{"ruleId":"214","severity":1,"message":"219","line":21,"column":29,"nodeType":"216","messageId":"217","endLine":21,"endColumn":38},{"ruleId":"214","severity":1,"message":"220","line":4,"column":39,"nodeType":"216","messageId":"217","endLine":4,"endColumn":51},{"ruleId":"214","severity":1,"message":"221","line":10,"column":12,"nodeType":"216","messageId":"217","endLine":10,"endColumn":22},{"ruleId":"214","severity":1,"message":"222","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":21},{"ruleId":"214","severity":1,"message":"223","line":7,"column":10,"nodeType":"216","messageId":"217","endLine":7,"endColumn":19},{"ruleId":"214","severity":1,"message":"224","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":15},{"ruleId":"214","severity":1,"message":"225","line":4,"column":24,"nodeType":"216","messageId":"217","endLine":4,"endColumn":31},{"ruleId":"214","severity":1,"message":"222","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":21},{"ruleId":"214","severity":1,"message":"222","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":21},{"ruleId":"214","severity":1,"message":"222","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":21},{"ruleId":"214","severity":1,"message":"226","line":13,"column":47,"nodeType":"216","messageId":"217","endLine":13,"endColumn":63},{"ruleId":"227","severity":1,"message":"228","line":52,"column":7,"nodeType":"229","endLine":52,"endColumn":68,"suggestions":"230"},{"ruleId":"214","severity":1,"message":"231","line":67,"column":11,"nodeType":"216","messageId":"217","endLine":67,"endColumn":28},{"ruleId":"214","severity":1,"message":"232","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":18},{"ruleId":"214","severity":1,"message":"233","line":35,"column":19,"nodeType":"216","messageId":"217","endLine":35,"endColumn":23},{"ruleId":"214","severity":1,"message":"234","line":35,"column":24,"nodeType":"216","messageId":"217","endLine":35,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":94,"column":1,"nodeType":"237","endLine":97,"endColumn":2},{"ruleId":"214","severity":1,"message":"238","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":12},{"ruleId":"214","severity":1,"message":"239","line":1,"column":14,"nodeType":"216","messageId":"217","endLine":1,"endColumn":16},{"ruleId":"214","severity":1,"message":"240","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":20},{"ruleId":"214","severity":1,"message":"241","line":2,"column":57,"nodeType":"216","messageId":"217","endLine":2,"endColumn":66},{"ruleId":"214","severity":1,"message":"242","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":238,"column":111,"nodeType":"245","messageId":"246","endLine":238,"endColumn":113},{"ruleId":"214","severity":1,"message":"247","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":13},{"ruleId":"214","severity":1,"message":"222","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":21},{"ruleId":"214","severity":1,"message":"248","line":15,"column":12,"nodeType":"216","messageId":"217","endLine":15,"endColumn":26},{"ruleId":"214","severity":1,"message":"249","line":15,"column":27,"nodeType":"216","messageId":"217","endLine":15,"endColumn":37},{"ruleId":"214","severity":1,"message":"250","line":15,"column":38,"nodeType":"216","messageId":"217","endLine":15,"endColumn":44},{"ruleId":"214","severity":1,"message":"251","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":17},{"ruleId":"214","severity":1,"message":"251","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":17},{"ruleId":"214","severity":1,"message":"252","line":2,"column":20,"nodeType":"216","messageId":"217","endLine":2,"endColumn":28},{"ruleId":"214","severity":1,"message":"253","line":2,"column":36,"nodeType":"216","messageId":"217","endLine":2,"endColumn":45},{"ruleId":"214","severity":1,"message":"254","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"253","line":2,"column":36,"nodeType":"216","messageId":"217","endLine":2,"endColumn":45},{"ruleId":"214","severity":1,"message":"254","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"253","line":2,"column":36,"nodeType":"216","messageId":"217","endLine":2,"endColumn":45},{"ruleId":"214","severity":1,"message":"254","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"255","line":5,"column":32,"nodeType":"216","messageId":"217","endLine":5,"endColumn":37},{"ruleId":"214","severity":1,"message":"256","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":36,"column":43,"nodeType":"259","messageId":"260","endLine":36,"endColumn":45},{"ruleId":"257","severity":1,"message":"258","line":36,"column":67,"nodeType":"259","messageId":"260","endLine":36,"endColumn":69},{"ruleId":"214","severity":1,"message":"239","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":12},{"ruleId":"214","severity":1,"message":"261","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":16},{"ruleId":"214","severity":1,"message":"262","line":3,"column":18,"nodeType":"216","messageId":"217","endLine":3,"endColumn":24},{"ruleId":"214","severity":1,"message":"263","line":3,"column":19,"nodeType":"216","messageId":"217","endLine":3,"endColumn":32},{"ruleId":"210","replacedBy":"264"},{"ruleId":"212","replacedBy":"265"},{"ruleId":"214","severity":1,"message":"255","line":5,"column":32,"nodeType":"216","messageId":"217","endLine":5,"endColumn":37},{"ruleId":"214","severity":1,"message":"256","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":22},{"ruleId":"257","severity":1,"message":"258","line":39,"column":43,"nodeType":"259","messageId":"260","endLine":39,"endColumn":45},{"ruleId":"257","severity":1,"message":"258","line":39,"column":67,"nodeType":"259","messageId":"260","endLine":39,"endColumn":69},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"@typescript-eslint/no-unused-vars","'getuid' is defined but never used.","Identifier","unusedVar","'LoadingCompnent' is defined but never used.","'appLoaded' is assigned a value but never used.","'DropdownMenu' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'ActivityStore' is defined but never used.","'RootStore' is defined but never used.","'group' is defined but never used.","'Segment' is defined but never used.","'hasLengthBetween' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activity.id.length'. Either include it or remove the dependency array.","ArrayExpression",["268"],"'handleInputChange' is assigned a value but never used.","'promises' is defined but never used.","'data' is assigned a value but never used.","'config' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ca' is defined but never used.","'tr' is defined but never used.","'observable' is defined but never used.","'configure' is defined but never used.","'createContext' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'React' is defined but never used.","'deleteActivity' is assigned a value but never used.","'submitting' is assigned a value but never used.","'target' is assigned a value but never used.","'observe' is defined but never used.","'Observer' is defined but never used.","'FinalForm' is defined but never used.","'FormField' is defined but never used.","'Label' is defined but never used.","'ErrorMessage' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'Button' is defined but never used.","'Header' is defined but never used.","'MessageHeader' is defined but never used.",["266"],["267"],"no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},"Update the dependencies array to be: [LoadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]",{"range":"271","text":"272"},[2054,2115],"[LoadActivity, clearActivity, match.params.id, initialFormState, activity.id.length]"]